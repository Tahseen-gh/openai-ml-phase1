name: security
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write # only used if we later upload SARIF (commented step below)

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bandit:
    name: security / bandit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "**/requirements*.txt"
      - name: Install tools
        run: |
          python -m pip install -U pip
          # Install project + dev deps if present, then bandit
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
          python -m pip install bandit
      - name: Bandit (blocking: MEDIUM/HIGH sev & conf)
        run: |
          bandit -r fastapi_app \
                 -x tests,__pycache__,.venv,build,dist \
                 --severity-level medium --confidence-level medium \
                 -f json -o bandit.json
          # Also print a concise human summary to logs
          bandit -r fastapi_app \
                 -x tests,__pycache__,.venv,build,dist \
                 --severity-level medium --confidence-level medium
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit.json
          path: bandit.json
      # Optional SARIF upload (enable later if desired)
      # - name: Upload SARIF to code scanning
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: bandit.sarif

  pip-audit:
    name: security / pip-audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "**/requirements*.txt"
      - name: Install tools
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
          python -m pip install pip-audit
      - name: pip-audit (non-blocking initially)
        run: |
          set +e
          pip-audit -r requirements.txt -f json -o pip-audit.json || true
          if [ -f requirements-dev.txt ]; then pip-audit -r requirements-dev.txt || true; fi
          # Human readable summary for logs (best-effort)
          pip-audit -r requirements.txt || true
      - name: Upload pip-audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit.json
          path: pip-audit.json
